}
for (year in years) {
elections <- excel_sheets(paste(path, year, sep = "\\"))
for (election in elections){
if (election != "blank"){
print(election)
}
}
}
write.xlsx(data.frame(Empty = "", row.names = NULL), file = "SpecialElections.xlsx",
sheetName= "blank")
library(readxl)
library(tidyverse)
library("xlsx")
write.xlsx(data.frame(Empty = "", row.names = NULL), file = "SpecialElections.xlsx",
sheetName= "blank")
for (year in years) {
excel_path <- paste(path, year, sep = "\\")
elections <- excel_sheets(excel_path)
for (election in elections){
if (election != "blank"){
print(election)
}
}
}
result <- read_excel(path = excel_path, sheet = "election")
result <- read_excel(path = excel_path, sheet = election)
View(result)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3))
View(result)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
arrange(desc(Freq))
View(result)
result[10, 2]
result[[10, 2]]
second <- result[[10, 2]]
typeof(result[[10, 2]])
ratio <- result[[10, 2]]/result[[10, 3]]
ratio <- result[[2, 2]]/result[[3, 2]]
## This Pulls Each Election and Finds the Special Ones
for (year in years) {
excel_path <- paste(path, year, sep = "\\")
elections <- excel_sheets(excel_path)
for (election in elections){
if (election != "blank"){
print(election)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
arrange(desc(Freq))
ratio <- result[[2, 2]]/result[[3, 2]]
if (ratio > 2) {
write.xlsx(result, file = "SpecialElections.xlsx",
sheetName = election, append = TRUE)
}
}
}
}
write.xlsx(data.frame(Empty = "", row.names = NULL), file = "SpecialElections.xlsx",
sheetName= "blank")
year[[1:4]]
year[[1, 4]]
substr(year, 1, 4)
write.xlsx(result, file = "SpecialElections.xlsx",
sheetName = paste0(substr(year, 1, 4), election), append = TRUE)
write.xlsx(data.frame(Empty = "", row.names = NULL), file = "SpecialElections.xlsx",
sheetName= "blank")
## This Pulls Each Election and Finds the Special Ones
for (year in years) {
excel_path <- paste(path, year, sep = "\\")
elections <- excel_sheets(excel_path)
for (election in elections){
if (election != "blank"){
print(election)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
arrange(desc(Freq))
ratio <- result[[2, 2]]/result[[3, 2]]
if (ratio > 2) {
write.xlsx(result, file = "SpecialElections.xlsx",
sheetName = paste0(substr(year, 1, 4), election), append = TRUE)
}
}
}
}
## This Pulls Each Election and Finds the Special Ones
for (year in years) {
excel_path <- paste(path, year, sep = "\\")
elections <- excel_sheets(excel_path)
for (election in elections){
if (election != "blank"){
print(election)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
arrange(desc(Freq))
ratio <- result[[2, 2]]/result[[3, 2]]
if (ratio > 2) {
write.xlsx(result, file = "SpecialElections.xlsx",
sheetName = gsub(" ", "", paste0(substr(year, 1, 4), election)), append = TRUE)
}
}
}
}
write.xlsx(data.frame(Empty = "", row.names = NULL), file = "SpecialElections.xlsx",
sheetName= "blank")
## This Pulls Each Election and Finds the Special Ones
for (year in years) {
excel_path <- paste(path, year, sep = "\\")
elections <- excel_sheets(excel_path)
for (election in elections){
if (election != "blank"){
print(election)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
arrange(desc(Freq))
ratio <- result[[2, 2]]/result[[3, 2]]
if (ratio > 2) {
write.xlsx(result, file = "SpecialElections.xlsx",
sheetName = gsub(" ", "", paste0(substr(year, 1, 4), election)), append = TRUE)
}
}
}
}
## This Pulls Each Election and Finds the Special Ones
for (year in years) {
excel_path <- paste(path, year, sep = "\\")
elections <- excel_sheets(excel_path)
for (election in elections){
if (election != "blank"){
print(election)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
arrange(desc(Freq))
ratio <- result[[2, 2]]/result[[3, 2]]
if (ratio > 2) {
write.xlsx(result, file = "SpecialElections.xlsx",
sheetName = gsub(" ", "", paste0(substr(year, 1, 4), election)), append = TRUE, row.names = FALSE)
}
}
}
}
write.xlsx(data.frame(Empty = "", row.names = NULL), file = "SpecialElections.xlsx",
sheetName= "blank")
write.xlsx(data.frame(Empty = "", row.names = NULL), file = "SpecialElections.xlsx",
sheetName= "blank")
## This Pulls Each Election and Finds the Special Ones
for (year in years) {
excel_path <- paste(path, year, sep = "\\")
elections <- excel_sheets(excel_path)
for (election in elections){
if (election != "blank"){
print(election)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
arrange(desc(Freq))
ratio <- result[[2, 2]]/result[[3, 2]]
if (ratio > 2) {
write.xlsx(result, file = "SpecialElections.xlsx",
sheetName = gsub(" ", "", paste0(substr(year, 1, 4), election)), append = TRUE, row.names = FALSE)
}
}
}
}
write.xlsx(data.frame(Empty = "", row.names = NULL), file = "SpecialElections.xlsx",
sheetName= "blank")
## This Pulls Each Election and Finds the Special Ones
for (year in years) {
excel_path <- paste(path, year, sep = "\\")
elections <- excel_sheets(excel_path)
for (election in elections){
if (election != "blank"){
print(election)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
arrange(desc(Freq))
ratio <- result[[2, 2]]/result[[3, 2]]
if (ratio > 2) {
write.xlsx(result, file = "SpecialElections.xlsx",
sheetName = gsub(" ", "", paste0(substr(year, 1, 4), election)), append = TRUE, row.names = FALSE)
}
}
}
}
View(result)
?write.xlsx
write.xlsx(data.frame(Empty = "", row.names = NULL), file = "SpecialElections.xlsx",
sheetName= "blank")
## This Pulls Each Election and Finds the Special Ones
for (year in years) {
excel_path <- paste(path, year, sep = "\\")
elections <- excel_sheets(excel_path)
for (election in elections){
if (election != "blank"){
print(election)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
arrange(desc(Freq))
ratio <- result[[2, 2]]/result[[3, 2]]
if (ratio > 2) {
write.xlsx(result, file = "SpecialElections.xlsx",
sheetName = gsub(" ", "", paste0(substr(year, 1, 4), election)), append = TRUE, row.names = FALSE)
}
}
}
}
typeof(result)
## This Pulls Each Election and Finds the Special Ones
for (year in years) {
excel_path <- paste(path, year, sep = "\\")
elections <- excel_sheets(excel_path)
for (election in elections){
if (election != "blank"){
print(election)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
arrange(desc(Freq))
ratio <- result[[2, 2]]/result[[3, 2]]
if (ratio > 2) {
write.xlsx(data.frame(result), file = "SpecialElections.xlsx",
sheetName = gsub(" ", "", paste0(substr(year, 1, 4), election)), append = TRUE, row.names = FALSE)
}
}
}
}
View(result)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
rename(var1 = "Ranking") %>%
arrange(desc(Freq))
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
rename("Ranking" = "var1") %>%
arrange(desc(Freq))
View(result)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
rename("Ranking" = "Var1") %>%
arrange(desc(Freq))
## This Pulls Each Election and Finds the Special Ones
for (year in years) {
excel_path <- paste(path, year, sep = "\\")
elections <- excel_sheets(excel_path)
for (election in elections){
if (election != "blank"){
print(election)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
rename("Ranking" = "Var1") %>%
arrange(desc(Freq))
ratio <- result[[2, 2]]/result[[3, 2]]
if (ratio > 2) {
write.xlsx(data.frame(result), file = "SpecialElections.xlsx",
sheetName = gsub(" ", "", paste0(substr(year, 1, 4), election)), append = TRUE, row.names = FALSE)
}
}
}
}
write.xlsx(data.frame(Empty = "", row.names = NULL), file = "SpecialElections.xlsx",
sheetName= "blank")
write.xlsx(data.frame(Empty = "", row.names = NULL), file = "SpecialElections.xlsx",
sheetName= "blank")
## This Pulls Each Election and Finds the Special Ones
for (year in years) {
excel_path <- paste(path, year, sep = "\\")
elections <- excel_sheets(excel_path)
for (election in elections){
if (election != "blank"){
print(election)
result <- read_excel(path = excel_path, sheet = election) %>%
select(c(2, 3)) %>%
rename("Ranking" = "Var1") %>%
arrange(desc(Freq))
ratio <- result[[2, 2]]/result[[3, 2]]
if (ratio > 2) {
write.xlsx(data.frame(result), file = "SpecialElections.xlsx",
sheetName = gsub(" ", "", paste0(substr(year, 1, 4), election)), append = TRUE, row.names = FALSE)
}
}
}
}
june2018_cd2 <- read_excel("Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx")
library("tidyverse")
june2018_cd2 <- read_excel("Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx")
?read_excel
june2018_cd2 <- read_excel("Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx")
june2018_cd2 <- read_excel(path = "Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx")
library("tidyverse")
june2018_cd2 <- read_excel(path = "Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx")
library("tidyverse")
june2018_cd2 <- read_excel(path = "Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx")
june2018_cd2 <- tidyverse::read_excel(path = "Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx")
?read_excel
june2018_cd2 <- read_xlsx(path = "Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx")
install.packages("readxl")
library("readxl")
june2018_cd2 <- read_xlsx(path = "Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx")
View(june2018_cd2)
june2018_cd2 <- read_xlsx(path = "Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx") %>%
filter(`..9` == 4)
june2018_cd2 <- read_xlsx(path = "Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx")
june2018_cd2 <- read_xlsx(path = "Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx") %>%
filter(Count == 4)
View(june2018_cd2)
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:9 , sep = ">")
View(ballot_rankings)
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:9 , sep = ">") %>%
select(c(`Cast Voste Record`, ballot)) %>%
group_by(pref_voter_id) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:9 , sep = ">") %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(pref_voter_id) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:9 , sep = ">") %>%
select(c(`Cast Vote Record`, ballot))
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:9 , sep = ">") %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
View(freq_legitimate_ballot)
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:8 , sep = ">") %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:7 , sep = ">") %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
View(ballot_rankings)
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
View(freq_legitimate_ballot)
?if
ballot_rankings <- june2018_cd2 %>%
mutate(
`DEM Rep. to Congress 4th Choice District 2` =
if_else(`DEM Rep. to Congress 5th Choice District 2` == "undervote",
`DEM Rep. to Congress 4th Choice District 2`,
`DEM Rep. to Congress 5th Choice District 2`)
)
ballot_rankings <- june2018_cd2 %>%
mutate(
`DEM Rep. to Congress 4th Choice District 2` =
if_else(`DEM Rep. to Congress 5th Choice District 2` == "undervote",
`DEM Rep. to Congress 4th Choice District 2`,
`DEM Rep. to Congress 5th Choice District 2`)
) %>%
unite(col = ballot, 4:7 , sep = ">") %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
View(freq_legitimate_ballot)
?grep
View(ballot_rankings)
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:7 , sep = ">") %>%
mutate(
ballot = gsub(">?undervote>?", "", ballot)
) %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
View(freq_legitimate_ballot)
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:7 , sep = ">") %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
View(freq_legitimate_ballot)
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:7 , sep = ">") %>%
mutate(
ballot = gsub(">undervote", "", gsub("undervote>", "", ballot))
) %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:8 , sep = ">") %>%
mutate(
ballot = gsub(">undervote", "", gsub("undervote>", "", ballot))
) %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
write.xlsx(freq_legitimate_ballot, file = "Maine/Ranking_Frequency/June2018CD2_Frequency.xlsx",
sheetName="Ballot Frequency")
library("xlsx")
write.xlsx(freq_legitimate_ballot, file = "Maine/Ranking_Frequency/June2018CD2_Frequency.xlsx",
sheetName="Ballot Frequency")
write.xlsx(freq_legitimate_ballot, file = "Maine/Ranking_Frequency/June2018CD2_Frequency.xlsx",
sheetName="Ballot Frequency", row.names = FALSE)
?read_xlsx
june2018_gov <- read_xlsx(path = "Maine/June 2018/Maine Democratic Primary for Governor CVR.xlsx",
sheet = "Governor Dem") %>%
filter(`Number of Rankings` == 4)
june2018_gov <- read_xlsx(path = "Maine/June 2018/Maine Democratic Primary for Governor CVR.xlsx",
sheet = "Governor Dem") %>%
filter(`Number of Rankings` == 4)
View(june2018_gov)
june2018_gov <- read_xlsx(path = "Maine/June 2018/Maine Democratic Primary for Governor CVR.xlsx",
sheet = "Governor Dem") %>%
filter(`Number of Rankings` == 8)
june2018_gov <- read_xlsx(path = "Maine/June 2018/Maine Democratic Primary for Governor CVR.xlsx",
sheet = "Governor Dem") %>%
filter(`Number of Rankings` == 8) %>%
select(c(1, 4:12))
View(june2018_gov)
ballot_rankings <- june2018_gov %>%
unite(col = ballot, 2:9 , sep = ">") %>%
mutate(
ballot = gsub(">undervote", "", gsub("undervote>", "", ballot))
) %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
View(ballot_rankings)
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
View(ballot_rankings)
View(freq_legitimate_ballot)
write.xlsx(freq_legitimate_ballot, file = "Maine/Ranking_Frequency/June2018CD2_Frequency.xlsx",
sheetName="Ballot Frequency", row.names = FALSE)
june2018_cd2 <- read_xlsx(path = "Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx",
sheet = "Governor Dem") %>%
filter(Count == 4)
june2018_cd2 <- read_xlsx(path = "Maine/June 2018/Maine Democratic Primary for CD2 CVR.xlsx") %>%
filter(Count == 4)
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:8 , sep = ">") %>%
mutate(
ballot = gsub(">undervote", "", gsub("undervote>", "", ballot))
) %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
write.xlsx(freq_legitimate_ballot, file = "Maine/Ranking_Frequency/June2018CD2_Frequency.xlsx",
sheetName="Ballot Frequency", row.names = FALSE)
june2018_cd2 <- read_xlsx(path = paste0("Maine/June 2018/", file)) %>%
filter(`Number of Ranking` == 8)
june2018_cd2 <- read_xlsx(path = paste0("Maine/June 2018/", file),
sheet = "Governor Dem") %>%
filter(`Number of Ranking` == 8) %>%
select(c(1:12))
june2018_gov <- read_xlsx(path = paste0("Maine/June 2018/", file),
sheet = "Governor Dem") %>%
filter(`Number of Ranking` == 8) %>%
select(c(1:12))
?paste0
file = "Maine Democratic Primary for Governor CVR.xlsx"
june2018_gov <- read_xlsx(path = paste0("Maine/June 2018/", file),
sheet = "Governor Dem") %>%
filter(`Number of Ranking` == 8) %>%
select(c(1:12))
june2018_gov <- read_xlsx(path = paste0("Maine/June 2018/", file),
sheet = "Governor Dem") %>%
filter(`Number of Rankings` == 8) %>%
select(c(1:12))
View(june2018_gov)
View(june2018_gov)
ballot_rankings <- june2018_cd2 %>%
unite(col = ballot, 4:11 , sep = ">") %>%
mutate(
ballot = gsub(">undervote", "", gsub("undervote>", "", ballot))
) %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
View(freq_legitimate_ballot)
ballot_rankings <- june2018_gov %>%
unite(col = ballot, 4:11 , sep = ">") %>%
mutate(
ballot = gsub(">undervote", "", gsub("undervote>", "", ballot))
) %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
freq_legitimate_ballot <- data.frame(table(ballot_rankings$ballot))
View(freq_legitimate_ballot)
write.xlsx(freq_legitimate_ballot, file = "Maine/Ranking_Frequency/June2018Gov_Frequency.xlsx",
sheetName="Ballot Frequency", row.names = FALSE)
file = "Maine General for CD CVR Updated(1).xlsx"
file = "Maine General for CD CVR Updated(1).xlsx"
nov2018_cvr <- read_xlsx(path = paste0("Maine/November 2018/", file),
sheet = "Governor Dem")
file = "Maine General CD2 CVR Updated(1).xlsx"
nov2018_cvr <- read_xlsx(path = paste0("Maine/November 2018/", file))
View(nov2018_cvr)
ballot_rankings <- june2018_gov %>%
unite(col = ballot, 4:8 , sep = ">") %>%
filter(grepl("undervote", ballot, fixed=TRUE)) %>%
select(c(`Cast Vote Record`, ballot)) %>%
group_by(`Cast Vote Record`) %>%
filter (0 == anyDuplicated(unlist(strsplit(ballot, ">"))))
View(ballot_rankings)
