install.packages("rcv")
sf_bos_ballot
load(sf_bos_ballot)
library(rcv)
load("sf_bos_ballot")
install.packages("rcv")
devtools::install_github("ds-elections/rcv")
install.packages("devtools")
devtools::install_github("ds-elections/rcv")
library(tidyverse)
library(rcv)
load("sf_bos_ballot")
data("sf_bos_ballot")
force(sf_bos_ballot)
force(sf_bos_ballot)
View(sf_bos_ballot)
data(sf_bos_lookup)
force(sf_bos_lookup)
cleaned <- clean_ballot(ballot = sf_bos_ballot, b_header = T,
lookup = sf_bos_lookup, l_header = T,
format = "WinEDS")
View(cleaned)
getwd()
Berk_Alameda_2017_Image <- read_tsv("Ballots\Alameda (Oakland, San Leandro, Berkeley)\Alameda (Oakland, San Leandro, Berkeley) 2017\BerkCouncilD4\ballot_image.txt")
Berk_Alameda_2017_Image <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/ballot_image.txt")
library(tidyverse)
library(rcv)
Berk_Alameda_2017_Image <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/ballot_image.txt")
View(Berk_Alameda_2017_Image)
Berk_Alameda_2017_Ballots <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/ballot_image.txt")
Berk_Alameda_2017_Lookup <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/master_lookup.txt")
Berk_Alameda_2017_Ballots <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/ballot_image.txt")
Berk_Alameda_2017_Lookup <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/master_lookup.txt")
View(Berk_Alameda_2017_Lookup)
View(Berk_Alameda_2017_Ballots)
View(Berk_Alameda_2017_Lookup)
Berk_Alameda_2017_Lookup <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/master_lookup.txt",
header = FALSE)
?read_txt
?read_tsv
Berk_Alameda_2017_Lookup <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/master_lookup.txt",
col_names = FALSE)
View(Berk_Alameda_2017_Lookup)
Berk_Alameda_2017_Ballots <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/ballot_image.txt",
col_names = FALSE)
Berk_Alameda_2017_Lookup <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/master_lookup.txt",
col_names = FALSE)
#/Anderson/Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4
cleaned <- clean_ballot(ballot = Berk_Alameda_2017_Ballots, b_header = T,
lookup = Berk_Alameda_2017_Lookup, l_header = T,
format = "WinEDS")
View(cleaned)
#Intro
data(sf_bos_ballot)
data(sf_bos_lookup)
force(sf_bos_ballot)
force(sf_bos_lookup)
View(sf_bos_ballot)
View(sf_bos_lookup)
cleaned_sf <- clean_ballot(ballot = sf_bos_ballot, b_header = T,
lookup = sf_bos_lookup, l_header = T,
format = "WinEDS")
View(cleaned_sf)
#/Anderson/Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4
cleaned <- clean_ballot(ballot = Berk_Alameda_2017_Ballots, b_header = T,
lookup = Berk_Alameda_2017_Lookup, l_header = T,
format = "WinEDS")
#/Anderson/Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4
cleaned_alameda <- clean_ballot(ballot = Berk_Alameda_2017_Ballots, b_header = T,
lookup = Berk_Alameda_2017_Lookup, l_header = T,
format = "WinEDS")
View(cleaned_alameda)
third_cleaned <- claned_alamenda %>%
filter(vote_rank == 3)
third_cleaned <- cleaned_alameda %>%
filter(vote_rank == 3)
View(third_cleaned)
cleaned(cleaned_alameda$candidate)
distinct_values(cleaned_alameda$candidate)
unique(cleaned_alameda$candidate)
distinct(cleaned_alameda$candidate)
unique(cleaned_alameda$candidate)
unique(cleaned_alameda$candidate)
library(tidyverse)
library(rcv)
#Intro
data(sf_bos_ballot)
data(sf_bos_lookup)
cleaned_sf <- clean_ballot(ballot = sf_bos_ballot, b_header = T,
lookup = sf_bos_lookup, l_header = T,
format = "WinEDS")
#
Berk_Alameda_2017_Ballots <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/ballot_image.txt",
col_names = FALSE)
Berk_Alameda_2017_Lookup <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/master_lookup.txt",
col_names = FALSE)
#/Anderson/Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4
cleaned_alameda <- clean_ballot(ballot = Berk_Alameda_2017_Ballots, b_header = T,
lookup = Berk_Alameda_2017_Lookup, l_header = T,
format = "WinEDS")
third_cleaned <- cleaned_alameda %>%
filter(vote_rank == 3)
unique(cleaned_alameda$candidate)
library(tidyverse)
library(rcv)
#Intro
data(sf_bos_ballot)
data(sf_bos_lookup)
cleaned_sf <- clean_ballot(ballot = sf_bos_ballot, b_header = T,
lookup = sf_bos_lookup, l_header = T,
format = "WinEDS")
#
Berk_Alameda_2017_Ballots <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/ballot_image.txt",
col_names = FALSE)
Berk_Alameda_2017_Lookup <- read_tsv("Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4/master_lookup.txt",
col_names = FALSE)
#/Anderson/Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4
cleaned_alameda <- clean_ballot(ballot = Berk_Alameda_2017_Ballots, b_header = T,
lookup = Berk_Alameda_2017_Lookup, l_header = T,
format = "WinEDS")
third_cleaned <- cleaned_alameda %>%
filter(vote_rank == 3)
unique(cleaned_alameda$candidate)
View(third_cleaned)
View(third_cleaned)
View(cleaned_alameda)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
write.csv(cleaned_alameda, "\\Cleaned_Ballots\\Berk_Alameda_2017_Council.csv", row.names = FALSE)
write.csv(cleaned_alameda, filepath = "\Cleaned_Ballots\Berk_Alameda_2017_Council.csv", row.names = FALSE)
?write.csv
write_csv(cleaned_alameda,
filepath = "\\Cleaned_Ballots\\Berk_Alameda_2017_Council.csv", row.names = FALSE)
?write_csv
write_csv(cleaned_alameda,
file = "\\Cleaned_Ballots\\Berk_Alameda_2017_Council.csv", row.names = FALSE)
write_csv(cleaned_alameda,
file = "\Cleaned_Ballots\Berk_Alameda_2017_Council.csv")
write_csv(cleaned_alameda,
file = "\\Cleaned_Ballots\\Berk_Alameda_2017_Council.csv")
getwd()
write_csv(cleaned_alameda,
file = "Cleaned_Ballots\\Berk_Alameda_2017_Council.csv")
# Import
Path = "Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2017/BerkCouncilD4"
Path_ballot = path + "/ballot_image.txt"
Path_ballot = Path + "/ballot_image.txt"
Path_ballot = paste0(Path, "/ballot_image.txt")
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
View(cleaned_ballot)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
## Writing the output
write_csv(cleaned_ballot, file = "Cleaned_Ballots\\2016_BerkeleyCouncilD2.csv")
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
## Writing the output
write_csv(cleaned_ballot, file = "Cleaned_Ballots\\2016_BerkeleyCouncilD6.csv")
View(cleaned_sf)
View(cleaned_ballot)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
table(cleaned_ballot$candidate)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
source("~/Research/Anderson/RankChoiceClean.R", echo=TRUE)
View(cleaned_ballot)
ballot_rankings <- cleaned_ballots %>%
mutate(candidate = replace_na(candidate, "")) %>%
pivot_wider(names_from = vote_rank, values_from = candidate)
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "")) %>%
pivot_wider(names_from = vote_rank, values_from = candidate)
View(ballot_rankings)
## Writing the output
# write_csv(cleaned_ballot, file = "Cleaned_Ballots\\2016_BerkeleyCouncilD6.csv")
table(cleaned_ballot$vote_rank)
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate)
ballot_rankings <- cleaned_ballot %>%
#mutate(candidate = replace_na(candidate, "")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate)
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate)
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate) %>%
mutate(ballot = `1` + `2` + `3`)
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate) %>%
mutate(ballot = paste(`1`, `2`,`3`, sep = ","))
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate) %>%
mutate(ballot = paste(`1`, `2`,`3`, sep = ">"))
table(ballot_rankings$ballot)
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "Blank")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate) %>%
mutate(ballot = paste(`1`, `2`,`3`, sep = ">"))
table(ballot_rankings$ballot)
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "Blank")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate) %>%
mutate(ballot = paste(`1`, `2`,`3`, sep = ">")) %>%
filter(!("BLANK" %in% ballot))
table(ballot_rankings$ballot)
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "Blank")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate) %>%
mutate(ballot = paste(`1`, `2`,`3`, sep = ">")) %>%
filter(!("Blank" %in% ballot))
table(ballot_rankings$ballot)
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "Blank")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate) %>%
mutate(ballot = paste(`1`, `2`,`3`, sep = ">")) %>%
filter(!grepl("Blank", ballot))
table(ballot_rankings$ballot)
getwd()
list.files(getwd())
list.files("Ballots/Alameda (Oakland, San Leandro, Berkeley)/")
years <- list.files("Ballots/Alameda (Oakland, San Leandro, Berkeley)/")
years <- list.files("Ballots/Alameda (Oakland, San Leandro, Berkeley)/")
getwd(years)
getwd(files)
for (files in years){
list.files(files)
}
for (file in years){
list.files(file)
}
library(tidyverse)
getwd()
years <- list.files("Ballots/Alameda (Oakland, San Leandro, Berkeley)/")
for (file in years){
list.files(file)
}
print(list.files(file))
for (file in years){
print(list.files(file))
}
for (file in years){
print(list.files(path = file))
}
years <- list.files("Ballots/Alameda (Oakland, San Leandro, Berkeley)/")
years <- list.files(path)
path = "Ballots/Alameda (Oakland, San Leandro, Berkeley)/"
years <- list.files(path)
}
for (file in years) {
print(list.files(path = paste(path, file, "/")))
}
for (file in years) {
print(list.files(path = paste(path, file, "/")))
}
list.files(path = paste(path, file, "/"))
ls()
for (file in years) {
print(list.files(path = paste(path, file, "/")))
}
paste(path, file, "/")
paste0(path, file, "/")
file
paste0(path, file, sep = "/")
paste0(path, file, collapse = "/")
paste0(path, file, sep = "/")
file
path
for (file in years) {
print(list.files(path = paste0(path, file, sep = "/")))
}
list.files(paste0(path, file, sep = "/"))
library(tidyverse)
library(rcv)
library("xlsx")
#The relevant files
# Where it takes it in from
Path = "Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2016/BerkeleyCouncilD2"
# Where it puts it out
output_path = "\\2016_Ballots.xlsx"
#### Import the ballots ####
Path_ballot = paste0(Path, "/ballot_image.txt")
Path_lookup = paste0(Path, "/master_lookup.txt")
Ballots <- read_tsv(Path_ballot, col_names = FALSE)
Lookup <- read_tsv(Path_lookup, col_names = FALSE)
# This gets the ballots into a readable format
cleaned_ballot <- clean_ballot(ballot = Ballots, b_header = T,
lookup = Lookup, l_header = T,
format = "WinEDS")
## Writing the (default) cleaned ballots
# cleaned_output_path = paste0("Cleaned_Ballots", output_path)
# write_csv(cleaned_ballot, file = cleaned_output_path)
# table(cleaned_ballot$vote_rank)
#### This gets the rankings for each ballot type  ####
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "Blank")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate) %>%
group_by(pref_voter_id) %>%
mutate(ballot = paste(`1`, `2`,`3`, sep = ">"),
unique_votes = any(duplicated(c(`1`, `2`, `3`))))
freq_ballot <- data.frame(table(ballot_rankings$ballot))
# This one only returns legitimate rankings
legitimate_ballot_rankings <- ballot_rankings %>%
filter(!grepl("Blank", ballot)) %>%
filter(unique_votes == FALSE)
freq_legitimate_ballot <- data.frame(table(legitimate_ballot_rankings$ballot))
#### Output these frequency tables #####
frequency_output_path = paste0("Ranking_Frequency", output_path) ## Puts it into this folder
write.xlsx(freq_legitimate_ballot, file = frequency_output_path,
sheetName="Legitimate Ballots")
# write.xlsx(freq_ballot, file = frequency_output_path,
#           sheetName="Full Ballots", append=TRUE)
library(tidyverse)
library(rcv)
library("xlsx")
#The relevant files
# Where it takes it in from
Path = "Ballots/Alameda (Oakland, San Leandro, Berkeley)/Alameda (Oakland, San Leandro, Berkeley) 2016/BerkeleyCouncilD2"
# Where it puts it out
output_path = "\\2016_Ballots.xlsx"
#### Import the ballots ####
Path_ballot = paste0(Path, "/ballot_image.txt")
Path_lookup = paste0(Path, "/master_lookup.txt")
Ballots <- read_tsv(Path_ballot, col_names = FALSE)
Lookup <- read_tsv(Path_lookup, col_names = FALSE)
# This gets the ballots into a readable format
cleaned_ballot <- clean_ballot(ballot = Ballots, b_header = T,
lookup = Lookup, l_header = T,
format = "WinEDS")
## Writing the (default) cleaned ballots
# cleaned_output_path = paste0("Cleaned_Ballots", output_path)
# write_csv(cleaned_ballot, file = cleaned_output_path)
# table(cleaned_ballot$vote_rank)
#### This gets the rankings for each ballot type  ####
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "Blank")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate) %>%
group_by(pref_voter_id) %>%
mutate(ballot = paste(`1`, `2`,`3`, sep = ">"),
unique_votes = any(duplicated(c(`1`, `2`, `3`))))
freq_ballot <- data.frame(table(ballot_rankings$ballot))
# This one only returns legitimate rankings
legitimate_ballot_rankings <- ballot_rankings %>%
filter(!grepl("Blank", ballot)) %>%
filter(unique_votes == FALSE)
freq_legitimate_ballot <- data.frame(table(legitimate_ballot_rankings$ballot))
#### Output these frequency tables #####
frequency_output_path = paste0("Ranking_Frequency", output_path) ## Puts it into this folder
write.xlsx(freq_legitimate_ballot, file = frequency_output_path,
sheetName="Legitimate Ballots")
# write.xlsx(freq_ballot, file = frequency_output_path,
#           sheetName="Full Ballots", append=TRUE)
clean_and_print <- function(Path, output_path) {
#### Import the ballots ####
Path_ballot = paste0(Path, "/ballot_image.txt")
Path_lookup = paste0(Path, "/master_lookup.txt")
Ballots <- read_tsv(Path_ballot, col_names = FALSE)
Lookup <- read_tsv(Path_lookup, col_names = FALSE)
# This gets the ballots into a readable format
cleaned_ballot <- clean_ballot(ballot = Ballots, b_header = T,
lookup = Lookup, l_header = T,
format = "WinEDS")
## Writing the (default) cleaned ballots
# cleaned_output_path = paste0("Cleaned_Ballots", output_path)
# write_csv(cleaned_ballot, file = cleaned_output_path)
# table(cleaned_ballot$vote_rank)
#### This gets the rankings for each ballot type  ####
ballot_rankings <- cleaned_ballot %>%
mutate(candidate = replace_na(candidate, "Blank")) %>%
pivot_wider(id_cols = pref_voter_id,
names_from = vote_rank, values_from = candidate) %>%
group_by(pref_voter_id) %>%
mutate(ballot = paste(`1`, `2`,`3`, sep = ">"),
unique_votes = any(duplicated(c(`1`, `2`, `3`))))
freq_ballot <- data.frame(table(ballot_rankings$ballot))
# This one only returns legitimate rankings
legitimate_ballot_rankings <- ballot_rankings %>%
filter(!grepl("Blank", ballot)) %>%
filter(unique_votes == FALSE)
freq_legitimate_ballot <- data.frame(table(legitimate_ballot_rankings$ballot))
#### Output these frequency tables #####
frequency_output_path = paste0("Ranking_Frequency", output_path) ## Puts it into this folder
write.xlsx(freq_legitimate_ballot, file = frequency_output_path,
sheetName="Legitimate Ballots")
# write.xlsx(freq_ballot, file = frequency_output_path,
#           sheetName="Full Ballots", append=TRUE)
}
library(tidyverse)
library(rcv)
library("xlsx")
